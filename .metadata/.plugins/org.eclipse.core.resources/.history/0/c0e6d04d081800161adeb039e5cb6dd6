package com.granada.reference;

public class MyMergeSort {

	public int[] doMergeSort(int[] list) {
		int length = list.length;
		divide(list, 0, length - 1);
		return list;
	}

	public void divide(int[] list, int leftIndex, int rightIndex) {
		if (leftIndex < rightIndex) {
			int mid = leftIndex + (rightIndex - leftIndex) / 2;
			divide(list, leftIndex, mid);
			divide(list, mid + 1, rightIndex);
			merge(list, leftIndex, mid, rightIndex);
		}
	}

	public void merge(int[] list, int left, int mid, int right) {

		int l = left;
		int r = mid;
		int arrayPointer = left;
		int[] tempArray = new int[right + 1];
		for (int i = left; i <= right; i++) {
			tempArray[i] = list[i];
		}

		while (l <= mid && r <= right) {

			if (tempArray[l] <= tempArray[r]) {
				list[arrayPointer] = tempArray[l];
				l++;
			} else {
				list[arrayPointer] = tempArray[r];
				r++;
			}
			arrayPointer++;

		}
		
		while(l <= mid) {
			list[arrayPointer] = tempArray[l];
			l++;
			arrayPointer++;
		}

	}

	public static void main(String[] args) {

		int[] abcd = {3,2,4,1,5,6,9,8,7};
		for(int n: abcd) {
			System.out.print("," + n);
		}
		System.out.println();
		
		MyMergeSort mm = new MyMergeSort();
		abcd = mm.doMergeSort(abcd);
		for(int n: abcd) {
			System.out.print("," + n);
		}
		System.out.println();
	}

}
