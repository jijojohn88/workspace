package com.granada.reference;

public class MyMergeSort {

	public int[] doMergeSort(int[] list) {
		int length = list.length;
		divide(list, 0, length - 1);
		return list;
	}

	public void divide(int[] list, int leftIndex, int rightIndex) {
		if (leftIndex < rightIndex) {
			int mid = leftIndex + (rightIndex - leftIndex) / 2;
			divide(list, leftIndex, mid);
			divide(list, mid + 1, rightIndex);
			merge(list, leftIndex, mid, rightIndex);
		}
	}

	public void merge(int[] array, int left, int middle, int right) {

		int[] tempMergeArray = new int[right + 1];
		for (int i = left; i <= right; i++) {
			tempMergeArray[i] = array[i];
		}
		
		int i = left;
		int j = middle;
		int arrayPointer = left;
		

		while (i <= middle && j <= right) {

			if (tempMergeArray[i] <= tempMergeArray[j]) {
				array[arrayPointer] = tempMergeArray[i];
				i++;
			} else {
				array[arrayPointer] = tempMergeArray[j];
				j++;
			}
			arrayPointer++;

		}
		
		while(i <= middle) {
			array[arrayPointer] = tempMergeArray[i];
			i++;
			arrayPointer++;
		}

	}

	public static void main(String[] args) {

		int[] abcd = {3,2,4,1,5,6,9,8,7};
		for(int n: abcd) {
			System.out.print("\t" + n);
		}
		System.out.println();
		
		MyMergeSort mm = new MyMergeSort();
		abcd = mm.doMergeSort(abcd);
		for(int n: abcd) {
			System.out.print("\t" + n);
		}
		System.out.println();
	}

}
