def swap(i, j):                    
    heapArray[i], heapArray[j] = heapArray[j], heapArray[i] 

def heapify(end,currentNode):   
    leftChild=2 * currentNode  
    rightChild=leftChild+1 
    maxNode=currentNode   
    if leftChild < end and heapArray[currentNode] < heapArray[leftChild]:   
        maxNode = leftChild   
    if rightChild < end and heapArray[maxNode] < heapArray[rightChild]:   
        maxNode = rightChild   
    if maxNode != currentNode:   
        swap(currentNode, maxNode)   
        heapify(end, maxNode)   

def heap_sort():     
    end = len(heapArray)   
    start = end // 2 - 1 # use // instead of /
    for i in range(start, -1, -1):   
        heapify(end, i)   
    for i in range(end-1, 0, -1):   
        swap(i, 0)   
        heapify(i, 0)   

heapArray = [2, 7,22, 1, -2, 56, 5, 3]
heap_sort()
print(heapArray) 